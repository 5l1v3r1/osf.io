# Config file for automatic testing at travis-ci.org

language: python

python:
    - "2.7"

sudo: false

cache:
  directories:
    - $HOME/.cache
    - node_modules
    - website/static/vendor/bower_components

env:
  global:
    - PROJECT_DIR="$PWD"
    - WHEELHOUSE="$HOME/.cache/wheelhouse"
    - LIBC_DEB="libc6_2.15-0ubuntu10.15_amd64.deb"
    - LIBSTDC_DEB="libstdc++6_4.6.3-1ubuntu5_amd64.deb"
    - LIBICU_DEB="libicu48_4.8.1.1-3ubuntu0.6_amd64.deb"
    - LIBXML2_DEB="libxml2_2.7.8.dfsg-5.1ubuntu4.15_amd64.deb"
    - LIBPQ_DEB="libpq5_9.5.4-1_amd64.deb"
    - POSTGRES_DEB="postgresql-9.5_9.5.4-3_amd64.deb"
    - ELASTICSEARCH_ARCHIVE="elasticsearch-1.5.0.tar.gz"
    - LIBJEMALLOC_DEB="libjemalloc1_3.5.1-2_amd64.deb"
    - LIBPCRE_DEB="libpcre3_8.31-2ubuntu2.3_amd64.deb"
    - VARNISH_DEB="varnish_4.1.0-1~trusty_amd64.deb"
  matrix:
    - TEST_BUILD="osf"
    - TEST_BUILD="else"
    - TEST_BUILD="varnish"

before_install:
    # cache directories
    - |
      mkdir -p $HOME/.cache/downloads
      mkdir -p $HOME/.cache/pip
      mkdir -p $HOME/.cache/wheelhouse
    # postgres
    - |
      cd $HOME/.cache/downloads

      if [ ! -f "$LIBC_DEB" ]; then
        curl -SLO http://security.ubuntu.com/ubuntu/pool/main/g/glibc/$LIBC_DEB
      fi

      if [ ! -f "$LIBSTDC_DEB" ]; then
        curl -SLO http://security.ubuntu.com/ubuntu/pool/main/g/gcc-6/$LIBSTDC_DEB
      fi

      if [ ! -f "$LIBICU_DEB" ]; then
        curl -SLO http://security.ubuntu.com/ubuntu/pool/main/i/icu/$LIBICU_DEB
      fi

      if [ ! -f "$LIBXML2_DEB" ]; then
        curl -SLO http://security.ubuntu.com/ubuntu/pool/main/libx/libxml2/$LIBXML2_DEB
      fi

      if [ ! -f "$LIBPQ_DEB" ]; then
        curl -SLO http://security.ubuntu.com/ubuntu/pool/main/p/postgresql-9.5/$LIBPQ_DEB
      fi

      if [ ! -f "$POSTGRES_DEB" ]; then
        curl -SLO http://security.ubuntu.com/ubuntu/pool/main/p/postgresql-9.5/$POSTGRES_DEB
      fi

      dpkg -x $LIBC_DEB /tmp/libc
      dpkg -x $LIBSTDC_DEB /tmp/libstdc
      dpkg -x $LIBICU_DEB /tmp/libicu
      dpkg -x $LIBXML2_DEB /tmp/libxml2
      dpkg -x $LIBPQ_DEB /tmp/libpq
      dpkg -x $POSTGRES_DEB /tmp/postgres
    - |
      export LD_LIBRARY_PATH=/tmp/libc/lib/x86_64-linux-gnu:/tmp/libstdc/usr/lib/x86_64-linux-gnu:/tmp/libxml2/usr/lib/x86_64-linux-gnu:/tmp/libicu/usr/lib/x86_64-linux-gnu:/tmp/libpq/usr/lib/x86_64-linux-gnu:/tmp/postgres/usr/lib/postgresql/9.5/lib
      /tmp/postgres/usr/lib/postgresql/9.5/bin/initdb /tmp/postgres/data --nosync
      /tmp/postgres/usr/lib/postgresql/9.5/bin/postgres -k /tmp -D /tmp/postgres/data > /dev/null &
    # elasticsearch
    - |
      cd $HOME/.cache/downloads

      if [ ! -f "$ELASTICSEARCH_ARCHIVE" ]; then
        curl -SLO https://download.elasticsearch.org/elasticsearch/elasticsearch/$ELASTICSEARCH_ARCHIVE
      fi

      if [ ! -f "$ELASTICSEARCH_ARCHIVE.sha1.txt" ]; then
        curl -SLO https://download.elasticsearch.org/elasticsearch/elasticsearch/$ELASTICSEARCH_ARCHIVE.sha1.txt
      fi

      sha1sum --check $ELASTICSEARCH_ARCHIVE.sha1.txt

      mkdir -p /tmp/elasticsearch
      tar xzf $ELASTICSEARCH_ARCHIVE -C /tmp/elasticsearch --strip-components=1
    - /tmp/elasticsearch/bin/elasticsearch > /dev/null &
    # varnish
    - |
      cd $HOME/.cache/downloads

      if [ ! -f "$LIBJEMALLOC_DEB" ]; then
        curl -SLO http://mirrors.kernel.org/ubuntu/pool/universe/j/jemalloc/$LIBJEMALLOC_DEB
      fi

      if [ ! -f "$LIBPCRE_DEB" ]; then
        curl -SLO http://security.ubuntu.com/ubuntu/pool/main/p/pcre3/$LIBPCRE_DEB
      fi

      if [ ! -f "$VARNISH_DEB" ]; then
        curl -SLO https://repo.varnish-cache.org/ubuntu/pool/varnish-4.1/v/varnish/$VARNISH_DEB
      fi

      dpkg -x $LIBJEMALLOC_DEB /tmp/libjemalloc
      dpkg -x $LIBPCRE_DEB /tmp/libpcre
      dpkg -x $VARNISH_DEB /tmp/varnish
    - |
      export LD_LIBRARY_PATH=/tmp/libpcre/lib/x86_64-linux-gnu:/tmp/libjemalloc/usr/lib/x86_64-linux-gnu:/tmp/varnish/usr/lib/varnish
      /tmp/varnish/usr/sbin/varnishd -n /tmp -p feature=+esi_disable_xml_check -p vmod_dir=/tmp/varnish/usr/lib/varnish/vmods -F -f $PROJECT_DIR/tests/test_files/varnish.vcl -a *:8080 > /dev/null &
    - |
      if [ "$TEST_BUILD" = "varnish" ]; then
        export ENABLE_VARNISH=True
      fi
install:
    - cd $PROJECT_DIR
    - cp website/settings/local-travis.py website/settings/local.py
    - cp api/base/settings/local-travis.py api/base/settings/local.py

    - travis_retry pip install --upgrade pip
    - travis_retry pip install invoke==0.13.0
    - travis_retry pip install flake8==2.4.0 --force-reinstall --upgrade
    - travis_retry npm install jshint
    - travis_retry invoke wheelhouse --dev --addons
    - travis_retry invoke travis_addon_settings
    - travis_retry invoke requirements --dev --addons
    # Hack to fix package conflict between uritemplate and uritemplate.py (dependency of github3.py)
    - pip uninstall uritemplate.py --yes
    - pip install uritemplate.py==0.3.0
    - travis_retry invoke assets --dev

# Run Python tests (core and addon) and JS tests
script:
    - invoke test_travis_$TEST_BUILD

before_cache:
  - rm -Rf $HOME/.cache/pip/http
  - rm -f $HOME/.cache/pip/log/debug.log
  # exclude python requirements from github repo's
  - rm -f $HOME/.cache/wheelhouse/modular_odm-*.whl
  - rm -f $HOME/.cache/wheelhouse/mfr-*.whl
  - rm -f $HOME/.cache/wheelhouse/httpretty-*.whl
  - rm -f $HOME/.cache/wheelhouse/mendeley-*.whl
  - rm -f $HOME/.cache/wheelhouse/feedparser-*.whl
  # exclude npm from github repo's
  - rm -Rf node_modules/dropzone
  - rm -Rf node_modules/treebeard

notifications:
  flowdock: 0221882cdda034c0e9ac2a0e766053dd
