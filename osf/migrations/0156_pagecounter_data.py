# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-11-12 17:18
from __future__ import unicode_literals

import logging

from django.db import migrations

from osf.management.commands.migrate_pagecounter_data import FORWARD_SQL, REVERSE_SQL, get_last_record_and_count

logger = logging.getLogger(__name__)

TOO_LARGE_FOR_AUTO_MIGRATION_THRESHOLD = 1000000
BATCH_SIZE = 10000


class Migration(migrations.Migration):

    dependencies = [
        ('osf', '0155_pagecounter_schema'),
    ]

    operations = []
    first = 1
    last, count = get_last_record_and_count()

    if count < TOO_LARGE_FOR_AUTO_MIGRATION_THRESHOLD:
        for start in range(first, last, BATCH_SIZE):
                operations.append(
                    migrations.RunSQL(
                        [(FORWARD_SQL, {'first': start, 'last': start + BATCH_SIZE})],
                        [(REVERSE_SQL, {'first': start, 'last': start + BATCH_SIZE})],
                    )
                )
    else:
        logger.info('Too many pagecounter records in DB. Use management command migrate_pagecount_data instead')