# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-03-14 14:41

"""
Backfill Retraction.date_retracted with `RETRACTION_APPROVED` log date.
"""

from __future__ import unicode_literals

from django.db import migrations

from osf.models import Registration, Retraction, Sanction


def forward(*args):
    retractions = Retraction.objects.filter(state=Sanction.APPROVED, date_retracted=None)
    total = retractions.count()

    print('Migrating {} retractions.'.format(total))

    for retraction in retractions:
        parent_registration = Registration.objects.get(retraction=retraction)

        retraction_logs = [
            log for log in parent_registration.registered_from.logs.all()
            if log.action == 'retraction_approved' and log.params.get('retraction_id') == retraction._id
        ]

        if len(retraction_logs) != 1:
            raise Exception('There should only be one retraction_approved log for retraction {} on node {}.'.format(
                retraction._id, parent_registration.registered_from._id
                )
            )

        date_retracted = retraction_logs[0].date

        print(
            'Setting date_retracted for retraction {} to be {}, from retraction_approved node log {}.'.format(
                retraction._id, date_retracted, retraction_logs[0]._id
            )
        )

        retraction.date_retracted = date_retracted
        retraction.save()


class Migration(migrations.Migration):

    dependencies = [
        ('osf', '0044_merge'),
    ]

    operations = [
        migrations.RunPython(forward)
    ]
