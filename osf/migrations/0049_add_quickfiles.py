# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-06-13 17:35
from __future__ import unicode_literals

import logging

from django.db import migrations, models
from django.core.paginator import Paginator

from osf.models import OSFUser, QuickFiles, Contributor
from osf.models.quickfiles import get_quickfiles_project_title

logger = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)


def add_quickfiles(*args, **kwargs):
    ids_without_quickfiles = list(OSFUser.objects.exclude(created__type='osf.quickfiles').values_list('id', flat=True))

    users_without_quickfiles = OSFUser.objects.filter(id__in=ids_without_quickfiles).order_by('id')
    total_quickfiles_to_create = users_without_quickfiles.count()

    logger.info('About to add QuickFiles for {} users.'.format(total_quickfiles_to_create))

    paginated_users = Paginator(users_without_quickfiles, 1000)

    total_created = 0
    for page_num in paginated_users.page_range:
        quickfiles_to_create = []
        for user in paginated_users.page(page_num).object_list:
            quickfiles_to_create.append(
                QuickFiles(
                    title=get_quickfiles_project_title(user),
                    creator=user
                )
            )
            total_created += 1

        all_quickfiles = QuickFiles.objects.bulk_create(quickfiles_to_create)

        contributors_to_create = []
        for quickfiles in all_quickfiles:
            quickfiles.add_addon('osfstorage', auth=None, log=False)
            quickfiles.save()

            contributors_to_create.append(
                Contributor(
                    user=quickfiles.creator,
                    node=quickfiles,
                    visible=True,
                    read=True,
                    write=True,
                    admin=True,
                    _order=0
                )
            )

        Contributor.objects.bulk_create(contributors_to_create)

        logger.info('Created {}/{} QuickFiles'.format(total_created, total_quickfiles_to_create))


def remove_quickfiles(*args, **kwargs):
    QuickFiles.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('osf', '0048_merge_20170804_0910'),
    ]

    operations = [
        migrations.CreateModel(
            name='QuickFiles',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('osf.abstractnode',),
        ),
        migrations.AlterField(
            model_name='abstractnode',
            name='type',
            field=models.CharField(choices=[('osf.node', 'node'), ('osf.collection', 'collection'), ('osf.registration', 'registration'), ('osf.quickfiles', 'quickfiles')], db_index=True, max_length=255),
        ),
        migrations.RunPython(add_quickfiles, remove_quickfiles),
    ]
