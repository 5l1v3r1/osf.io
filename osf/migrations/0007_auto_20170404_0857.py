# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-04-04 13:57
from __future__ import unicode_literals

from django.db import migrations, models
from django.core.management.sql import emit_post_migrate_signal


def get_preprintservice_permissions(apps):
    Permission = apps.get_model('auth', 'Permission')
    return Permission.objects.filter(
        models.Q(codename='view_preprintservice') |
        models.Q(codename='change_preprintservice') |
        models.Q(codename='delete_preprintservice')
    )

def add_preprintservice_permissions(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    # this is to make sure that the permissions created earlier exist!
    emit_post_migrate_signal(2, False, 'default')

    osf_admin = Group.objects.get(name='osf_admin')
    [osf_admin.permissions.add(perm) for perm in get_preprintservice_permissions(apps)]
    osf_admin.save()

    view_preprintservice = Permission.objects.filter(codename='view_preprintservice')
    if view_preprintservice.first():
        read_only = Group.objects.get(name='read_only')
        read_only.permissions.add(view_preprintservice.first())
        read_only.save()


def remove_preprintservice_permissions(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    osf_admin = Group.objects.get(name='osf_admin')
    [osf_admin.permissions.remove(perm) for perm in get_preprintservice_permissions(apps)]
    osf_admin.save()

    view_preprintservice = Permission.objects.filter(codename='view_preprintservice')
    if view_preprintservice.first():
        read_only = Group.objects.get(name='read_only')
        read_only.permissions.remove(view_preprintservice.first())
        read_only.save()

class Migration(migrations.Migration):

    dependencies = [
        ('osf', '0006_add_jsonb_index_for_fileversions'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='preprintservice',
            options={'permissions': (('view_preprintservice', 'Can view preprint service details in the admin app.'),)},
        ),
        migrations.RunPython(add_preprintservice_permissions, remove_preprintservice_permissions),
    ]
